USE UNIVER;

--1
SELECT PULPIT.PULPIT_NAME
FROM PULPIT
INNER JOIN FACULTY ON PULPIT.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY IN (
    SELECT PROFESSION.FACULTY
    FROM PROFESSION
    WHERE PROFESSION.PROFESSION_NAME LIKE '%технология%'
    OR PROFESSION.PROFESSION_NAME LIKE '%технологии%'
)

--2
SELECT PULPIT.PULPIT_NAME
FROM PULPIT
INNER JOIN FACULTY ON PULPIT.FACULTY = FACULTY.FACULTY
INNER JOIN (
    SELECT DISTINCT PROFESSION.FACULTY
    FROM PROFESSION
    WHERE PROFESSION.PROFESSION_NAME LIKE '%технология%'
    OR PROFESSION.PROFESSION_NAME LIKE '%технологии%'
) AS PROF ON FACULTY.FACULTY = PROF.FACULTY

--3
SELECT AT.AUDITORIUM_TYPE, A.AUDITORIUM, A.AUDITORIUM_CAPACITY
FROM AUDITORIUM_TYPE AT
CROSS APPLY (
    SELECT TOP 1 AUDITORIUM, AUDITORIUM_CAPACITY
    FROM AUDITORIUM
    WHERE AUDITORIUM_TYPE = AT.AUDITORIUM_TYPE
    ORDER BY AUDITORIUM_CAPACITY DESC
) A
ORDER BY A.AUDITORIUM_CAPACITY DESC

--4
SELECT F.FACULTY_NAME
FROM FACULTY F
WHERE NOT EXISTS (
    SELECT 1
    FROM PULPIT P
    WHERE P.FACULTY = F.FACULTY
)

--5
SELECT 
    (SELECT AVG(NOTE) FROM PROGRESS WHERE SUBJECT = 'ОАиП') as AVG_OAiP,
    (SELECT AVG(NOTE) FROM PROGRESS WHERE SUBJECT = 'БД') as AVG_BD,
    (SELECT AVG(NOTE) FROM PROGRESS WHERE SUBJECT = 'СУБД') as AVG_SUBD

--6
SELECT S.IDSTUDENT, S.NAME
FROM STUDENT S
WHERE (
    SELECT MIN(P.NOTE)
    FROM PROGRESS P
    WHERE P.IDSTUDENT = S.IDSTUDENT
) >= ALL (
    SELECT P.NOTE
    FROM PROGRESS P
)


--7
SELECT S.IDSTUDENT, S.NAME
FROM STUDENT S
WHERE (
    SELECT P.NOTE
    FROM PROGRESS P
    WHERE P.IDSTUDENT = S.IDSTUDENT
) > ANY (
    SELECT AVG(P.NOTE)
    FROM PROGRESS P
)




