USE UNIVER;

--1 и 2
SELECT 
    AT.AUDITORIUM_TYPE AS 'Тип аудитории',
    MAX(A.AUDITORIUM_CAPACITY) AS 'Максимальная вместимость',
    MIN(A.AUDITORIUM_CAPACITY) AS 'Минимальная вместимость',
    AVG(A.AUDITORIUM_CAPACITY) AS 'Средняя вместимость',
    SUM(A.AUDITORIUM_CAPACITY) AS 'Суммарная вместимость',
    COUNT(A.AUDITORIUM) AS 'Общее количество аудиторий'
FROM 
    AUDITORIUM A
INNER JOIN 
    AUDITORIUM_TYPE AT ON A.AUDITORIUM_TYPE = AT.AUDITORIUM_TYPE
GROUP BY 
    AT.AUDITORIUM_TYPE;

--3
SELECT 
    F.FACULTY_NAME AS 'Факультет',
    P.PROFESSION_NAME AS 'Специальность',
    G.YEAR_FIRST AS 'Курс',
    ROUND(AVG(CAST(PR.NOTE AS DECIMAL(10, 2))), 2) AS 'Средняя оценка'
FROM 
    FACULTY F
INNER JOIN 
    PROFESSION P ON F.FACULTY = P.FACULTY
INNER JOIN 
    GROUPS G ON P.PROFESSION = G.PROFESSION
INNER JOIN 
    STUDENT S ON G.IDGROUP = S.IDGROUP
INNER JOIN 
    PROGRESS PR ON S.IDSTUDENT = PR.IDSTUDENT
GROUP BY 
    F.FACULTY_NAME, P.PROFESSION_NAME, G.YEAR_FIRST
ORDER BY 
    'Средняя оценка' DESC;

--4
SELECT 
    SUBJECT AS 'Дисциплина',
    COUNT(IDSTUDENT) AS 'Количество студентов'
FROM 
    PROGRESS
WHERE 
    NOTE IN (8, 9)
GROUP BY 
    SUBJECT
HAVING 
    COUNT(IDSTUDENT) > 0
ORDER BY 
    COUNT(IDSTUDENT) DESC;

--5
SELECT 
    F.FACULTY_NAME AS 'Факультет',
    P.PROFESSION_NAME AS 'Специальность',
    S.SUBJECT_NAME AS 'Дисциплина',
    ROUND(AVG(CAST(PR.NOTE AS DECIMAL(10, 2))), 2) AS 'Средняя оценка'
FROM 
    FACULTY F
INNER JOIN 
    PROFESSION P ON F.FACULTY = P.FACULTY
INNER JOIN 
    GROUPS G ON P.PROFESSION = G.PROFESSION
INNER JOIN 
    STUDENT ST ON G.IDGROUP = ST.IDGROUP
INNER JOIN 
    PROGRESS PR ON ST.IDSTUDENT = PR.IDSTUDENT
INNER JOIN 
    SUBJECT S ON PR.SUBJECT = S.SUBJECT
WHERE 
    F.FACULTY_NAME = 'Технология органических веществ'
GROUP BY 
    ROLLUP (F.FACULTY_NAME, P.PROFESSION_NAME, S.SUBJECT_NAME)
HAVING 
    F.FACULTY_NAME IS NOT NULL AND 
	P.PROFESSION_NAME IS NOT NULL AND 
	S.SUBJECT_NAME IS NOT NULL;

--6
SELECT 
    AT.AUDITORIUM_TYPE AS 'Тип аудитории',
    MAX(A.AUDITORIUM_CAPACITY) AS 'Максимальная вместимость',
    MIN(A.AUDITORIUM_CAPACITY) AS 'Минимальная вместимость',
    AVG(A.AUDITORIUM_CAPACITY) AS 'Средняя вместимость',
    SUM(A.AUDITORIUM_CAPACITY) AS 'Суммарная вместимость',
    COUNT(A.AUDITORIUM) AS 'Общее количество аудиторий'
FROM 
    AUDITORIUM A
INNER JOIN 
    AUDITORIUM_TYPE AT ON A.AUDITORIUM_TYPE = AT.AUDITORIUM_TYPE
GROUP BY 
    CUBE (AT.AUDITORIUM_TYPE)


--7
-- Запрос для факультета ТОВ
SELECT 
    P.PROFESSION_NAME AS 'Специальность',
    S.SUBJECT_NAME AS 'Дисциплина',
    ROUND(AVG(CAST(PR.NOTE AS DECIMAL(10, 2))), 2) AS 'Средняя оценка'
FROM 
    FACULTY F
INNER JOIN 
    PROFESSION P ON F.FACULTY = P.FACULTY
INNER JOIN 
    GROUPS G ON P.PROFESSION = G.PROFESSION
INNER JOIN 
    STUDENT SТ ON G.IDGROUP = SТ.IDGROUP
INNER JOIN 
    PROGRESS PR ON SТ.IDSTUDENT = PR.IDSTUDENT
INNER JOIN 
    SUBJECT S ON PR.SUBJECT = S.SUBJECT
WHERE 
    F.FACULTY = 'ТОВ'
GROUP BY 
    P.PROFESSION_NAME, S.SUBJECT_NAME

UNION

-- Запрос для факультета ХТиТ
SELECT 
    P.PROFESSION_NAME AS 'Специальность',
    S.SUBJECT_NAME AS 'Дисциплина',
    ROUND(AVG(CAST(PR.NOTE AS DECIMAL(10, 2))), 2) AS 'Средняя оценка'
FROM 
    FACULTY F
INNER JOIN 
    PROFESSION P ON F.FACULTY = P.FACULTY
INNER JOIN 
    GROUPS G ON P.PROFESSION = G.PROFESSION
INNER JOIN 
    STUDENT SТ ON G.IDGROUP = SТ.IDGROUP
INNER JOIN 
    PROGRESS PR ON SТ.IDSTUDENT = PR.IDSTUDENT
INNER JOIN 
    SUBJECT S ON PR.SUBJECT = S.SUBJECT
WHERE 
    F.FACULTY = 'ХТиТ'
GROUP BY 
    P.PROFESSION_NAME, S.SUBJECT_NAME;

SELECT FACULTY, PROFESSION, IDGROUP, avg_score
FROM
(
    SELECT FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS avg_score
		FROM FACULTY
			JOIN GROUPS ON FACULTY.FACULTY = GROUPS.FACULTY
			JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
			JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		WHERE FACULTY.FACULTY = 'ТОВ'
		GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP
    INTERSECT
    SELECT FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS avg_score
		FROM FACULTY
			JOIN GROUPS ON FACULTY.FACULTY = GROUPS.FACULTY
			JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
			JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP
) AS intersection_result;

SELECT FACULTY, PROFESSION, IDGROUP, avg_score
FROM
(
    SELECT FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS avg_score
		FROM FACULTY
			JOIN GROUPS ON FACULTY.FACULTY = GROUPS.FACULTY
			JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
			JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP
    EXCEPT
    SELECT FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS avg_score
		FROM FACULTY
			JOIN GROUPS ON FACULTY.FACULTY = GROUPS.FACULTY
			JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
			JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		WHERE FACULTY.FACULTY = 'ХТиТ'
		GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.IDGROUP
) AS exception_result;
